// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"context"
	"github.com/Z00mZE/simple_adder/internal/adder/app"
	"github.com/Z00mZE/simple_adder/internal/adder/conf"
	"github.com/Z00mZE/simple_adder/internal/adder/transport/rpc"
	"github.com/Z00mZE/simple_adder/internal/adder/usecase/sum"
	"github.com/Z00mZE/simple_adder/internal/pkg/logger"
)

// Injectors from wire.go:

func InitApplication(ctx context.Context) (*app.Adder, func(), error) {
	settings, err := conf.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	slogLogger := logger.NewLogger(settings)
	server, cleanup, err := rpc.NewServer(ctx, settings, slogLogger)
	if err != nil {
		return nil, nil, err
	}
	useCase := sum.NewUseCase(slogLogger)
	dispatcher := rpc.NewDispatcher(server, useCase)
	adder := app.NewAdder(ctx, server, server, dispatcher, slogLogger)
	return adder, func() {
		cleanup()
	}, nil
}
